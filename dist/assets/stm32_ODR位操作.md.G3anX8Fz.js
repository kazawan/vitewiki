import{_ as s,c as a,o as n,V as e}from"./chunks/framework.6DK9nIBo.js";const O=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"stm32/ODR位操作.md","filePath":"stm32/ODR位操作.md"}'),p={name:"stm32/ODR位操作.md"},t=e(`<h2 id="odr直接控制gpio-输出-odr🩹" tabindex="-1">ODR直接控制gpio 输出 ODR🩹 <a class="header-anchor" href="#odr直接控制gpio-输出-odr🩹" aria-label="Permalink to &quot;ODR直接控制gpio 输出 ODR🩹&quot;">​</a></h2><p>##🥇定义宏</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#define GPIOD_ODR  *(unsigned int*)(0x4001140C) // D 16位管脚</span></span>
<span class="line"><span>#define GPIOA_ODR  *(unsigned int*)(0x4001080C) // A 16位管脚</span></span></code></pre></div><p>##🧰操作</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    GPIOD_ODR = 0xFFFB; //1111 1111 1111 1011 </span></span>
<span class="line"><span>    GPIOA_ODR = 0xFFFF;</span></span>
<span class="line"><span>    HAL_Delay(1000);</span></span>
<span class="line"><span>    GPIOD_ODR = 0xFFFF;</span></span>
<span class="line"><span>    GPIOA_ODR = 0xFEFF;</span></span>
<span class="line"><span>    HAL_Delay(1000);</span></span></code></pre></div>`,5),i=[t];function o(l,c,d,_,r,h){return n(),a("div",null,i)}const g=s(p,[["render",o]]);export{O as __pageData,g as default};
